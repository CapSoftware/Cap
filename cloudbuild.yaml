steps:
  # Create the Artifact Registry repository
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud artifacts repositories create ${_REPOSITORY} \
          --repository-format=docker \
          --location=${_REGION} \
          --description="Docker repository for Cloud Run" || true

  # Install dependencies
  - name: 'node:20'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        corepack enable
        pnpm install

  # Build the Docker image for web app
  - name: 'gcr.io/cloud-builders/docker'
    env:
      - 'DOCKER_BUILDKIT=1'
    args: [
      'build',
      '-t',
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA',
      '.',
      '-f',
      'apps/web/Dockerfile'
    ]
    id: 'Build-Web'

  # Push the Docker image for web app to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA']
    id: 'Push-Web'

  # Build the Docker image for tasks app
  - name: 'gcr.io/cloud-builders/docker'
    env:
      - 'DOCKER_BUILDKIT=1'
    args: [
      'build',
      '-t',
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/cap-tasks:$COMMIT_SHA',
      '.',
      '-f',
      'apps/tasks/Dockerfile'
    ]
    id: 'Build-Tasks'

  # Push the Docker image for tasks app to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/cap-tasks:$COMMIT_SHA']
    id: 'Push-Tasks'

  # Run Terraform
  - name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        terraform init
        terraform apply -auto-approve \
          -var="project_id=$PROJECT_ID" \
          -var="region=${_REGION}" \
          -var="services={ \
            \"cap-web\" = { \
              image_url = \"${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA\", \
              google_client_id_secret_id = \"projects/$PROJECT_ID/secrets/google-client-id\", \
              google_client_secret_secret_id = \"projects/$PROJECT_ID/secrets/google-client-secret\", \
              workos_client_id_secret_id = \"projects/$PROJECT_ID/secrets/workos-client-id\", \
              workos_api_key_secret_id = \"projects/$PROJECT_ID/secrets/workos-api-key\", \
              resend_api_key_secret_id = \"projects/$PROJECT_ID/secrets/resend-api-key\", \
              nextauth_secret_secret_id = \"projects/$PROJECT_ID/secrets/nextauth-secret\", \
              web_url = \"${_WEB_URL}\" \
            }, \
            \"cap-tasks\" = { \
              image_url = \"${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/cap-tasks:$COMMIT_SHA\" \
            } \
          }"
    id: 'Terraform-Apply'
    dir: 'terraform'

substitutions:
  _REGION: 'us-central1'
  _REPOSITORY: 'cloud-run-repo'
  _IMAGE_NAME: 'cap-web'
  _WEB_URL: 'https://your-app-url.com' # TODO: Replace with your actual URL

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/cap-tasks:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
