[workspace]
resolver = "2"
members = ["apps/cli", "apps/desktop/src-tauri", "crates/*"]

[workspace.dependencies]
anyhow = { version = "1.0.99" }
# This includes a currently-unreleased fix that ensures the audio stream is actually
# stopped and released on drop on macOS
cpal = { git = "https://github.com/RustAudio/cpal", rev = "f43d36e55494993bbbde3299af0c53e5cdf4d4cf" }
ffmpeg = { package = "ffmpeg-next", git = "https://github.com/CapSoftware/rust-ffmpeg", rev = "49db1fede112" }
tokio = { version = "1.47.1", features = [
    "macros",
    "process",
    "fs",
    "sync",
    "rt",
    "rt-multi-thread",
    "time",
] }
tauri = { version = "2.8.5", features = ["specta"] }
specta = { version = "=2.0.0-rc.22", features = [
    "derive",
    "serde_json",
    "uuid",
] }
serde = { version = "1", features = ["derive"] }

scap = { git = "https://github.com/CapSoftware/scap", rev = "3cefe71561ff" }
nokhwa = { git = "https://github.com/CapSoftware/nokhwa", rev = "b9c8079e82e2", features = [
    "input-native",
    "serialize",
] }
nokhwa-bindings-macos = { git = "https://github.com/CapSoftware/nokhwa", rev = "b9c8079e82e2" }
wgpu = "26.0.1"
flume = "0.11.1"
thiserror = "2.0"
sentry = { version = "0.42.0", features = [
    "anyhow",
    "backtrace",
    "debug-images",
] }
tracing = "0.1.41"
futures = "0.3.31"

cidre = { git = "https://github.com/CapSoftware/cidre", rev = "bf84b67079a8", features = [
    "macos_13_0",
    "cv",
    "cf",
    "sc",
    "av",
    "blocks",
    "async",
    "dispatch",
], default-features = false }

windows = "0.62.0"
windows-core = "0.62"
windows-sys = "0.61.0"
windows-capture = "1.5.0"
percent-encoding = "2.3.2"

# TODO: Reenable these: https://github.com/CapSoftware/Cap/issues/859
[workspace.lints.rust]
deprecated = "allow"
unexpected_cfgs = "allow"

[workspace.lints.clippy]
dbg_macro = "deny"
let_underscore_future = "deny"

# Optimize for smaller binary size
[profile.release]
panic = "abort"   # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true        # Enables link to optimizations
opt-level = "s"   # Optimize for binary size
debug = true

[patch.crates-io]
# screencapturekit = { git = "https://github.com/CapSoftware/screencapturekit-rs", rev = "7ff1e103742e56c8f6c2e940b5e52684ed0bed69" } # branch = "cap-main"
cidre = { git = "https://github.com/CapSoftware/cidre", rev = "bf84b67079a8" }
# https://github.com/gfx-rs/wgpu/pull/7550
wgpu = { git = "https://github.com/gfx-rs/wgpu", rev = "04a34016384963bf26353fad472b5d2c5ecdc359" }
# `main` - For wgpu 26
# https://github.com/brendanzab/codespan/issues/389#issuecomment-3157285757
glyphon = { git = "https://github.com/grovesNL/glyphon.git", rev = "724ab57edbd6c59ba219cd99cf89925d056392db" }
