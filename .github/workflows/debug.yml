name: "Debug Build: Silicon"

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

env:
  APP_CARGO_TOML: apps/desktop/src-tauri/Cargo.toml

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create API Key File
        run: echo "${{ secrets.APPLE_API_KEY_FILE }}" > api.p8

      - uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Verify certificate
        run: security find-identity -v -p codesigning ${{ runner.temp }}/build.keychain

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          shared-key: aarch64-apple-darwin

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.8.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Create .env file in root
        run: |
          echo "appVersion=debug" >> .env
          echo "CAP_DESKTOP_SENTRY_URL=https://efd3156d9c0a8a49bee3ee675bec80d8@o4506859771527168.ingest.us.sentry.io/4506859844403200" >> .env
          echo "NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}" >> .env
          echo 'NEXTAUTH_URL=${NEXT_PUBLIC_URL}' >> .env
          echo 'VITE_SERVER_URL=${NEXT_PUBLIC_URL}' >> .env

      - name: Copy .env to apps/desktop
        run: cp .env apps/desktop/.env

      - name: Output .env file
        run: cat apps/desktop/.env

      - name: Build Debug MacOS App (aarch64)
        working-directory: apps/desktop
        run: |
          export TARGET_TRIPLE=aarch64-apple-darwin
          node ${{ github.workspace }}/.github/prebuild.js aarch64
          pnpm tauri build --target aarch64-apple-darwin --debug
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # codesigning
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          # notarization
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          APPLE_API_KEY_PATH: ${{ github.workspace }}/api.p8
          APPLE_KEYCHAIN: ${{ runner.temp }}/build.keychain
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: Upload Debug Artifact
        uses: actions/upload-artifact@v3
        with:
          name: debug-build-aarch64-apple-darwin
          path: apps/desktop/src-tauri/target/aarch64-apple-darwin/debug/bundle/**/*.app
          if-no-files-found: error