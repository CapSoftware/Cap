## This configuration assumes you are running `pnpm dev`, ie. running both @cap/web and @cap/desktop locally.
## If you are only running @cap/desktop, comment out entries underneath '@cap/web + @cap/desktop'
## and uncomment entries underneath 'only @cap/desktop'
## Make sure to read the instructions on each section carefully, or you may incorrectly configure your environment.



### @cap/desktop
VITE_ENVIRONMENT=${NODE_ENV}

# @cap/web + @cap/desktop
VITE_SERVER_URL=${NEXT_PUBLIC_WEB_URL}
# only @cap/desktop
# VITE_SERVER_URL=https://cap.so

CAP_DESKTOP_SENTRY_URL=
RUST_BACKTRACE=full



### @cap/web
NODE_ENV=development
WEB_PORT=3000
NEXT_PUBLIC_WEB_URL=http://localhost:${WEB_PORT}
NEXTAUTH_URL=${NEXT_PUBLIC_WEB_URL}

## Database

# @cap/web supports connecting to either MySQL or Planetscale databases.
# For plain MySQL, just define DATABASE_URL (this default points to the database created by `pnpm dev`)
DATABASE_URL='mysql://root:@localhost:3306/planetscale'
# For Planetscale, define both a https:// DATABASE_URL and mysql:// DATABASE_MIGRATION_URL
# DATABASE_URL='https://{username}:{password}@aws.connect.psdb.cloud/{db-name}' # https:// identifies this as a PS connection string
# DATABASE_MIGRATION_URL='mysql://{username}:{password}@aws.connect.psdb.cloud/{db-name}?ssl={"rejectUnauthorized":false}' # necessary as migrations can't be performed over https

# Encrypts users' custom S3 credentials.
# Generate a value by running `openssl rand -hex 32`
DATABASE_ENCRYPTION_KEY=


## AWS/S3

# By default these are configured for the MinIO instance created by `pnpm dev`
CAP_AWS_ACCESS_KEY=capS3root
CAP_AWS_SECRET_KEY=capS3root
NEXT_PUBLIC_CAP_AWS_BUCKET=capso
NEXT_PUBLIC_CAP_AWS_REGION=us-east-1
# If you're not using AWS S3, point this to your custom S3 provider (default points to MinIO created by `pnpm dev`)
NEXT_PUBLIC_CAP_AWS_ENDPOINT=http://localhost:3902
# If using a proxy such as CloudFront, set this the full URL of the bucket
# NEXT_PUBLIC_CAP_AWS_BUCKET_URL=https://v.cap.so

# If you're using AWS S3 with CloudFront, set this to the CloudFront Distribution ID
# CAP_AWS_ACCESS_KEY and CAP_AWS_SECRET_KEY must have permission to modify the CF distribution
# CAP_CLOUDFRONT_DISTRIBUTION_ID=


# Necessary for authentication, genearte by running `openssl rand -base64 32`
NEXTAUTH_SECRET=

# Provide if you want to use Google authentication
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=

# Email via resend.com, used for auth (sign up/in, forgot password)
# Not necessary in development as auth links are printed to the console
# RESEND_API_KEY=

# Audio transcription
# DEEPGRAM_API_KEY=

# Only needed by cap.so cloud
# NEXT_LOOPS_KEY=

# Only needed by cap.so cloud
# VERCEL_AUTH_TOKEN=
# VERCEL_PROJECT_ID=
# VERCEL_TEAM_ID=

### @cap/tasks
TASKS_PORT=3002
NEXT_PUBLIC_TASKS_URL=http://localhost:${TASKS_PORT}
