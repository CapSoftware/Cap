[package]
name = "desktop"
version = "0.3.0-alpha.24"
description = "Effortless, instant screen sharing. Open source and cross-platform."
authors = ["you"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "desktop_solid_lib"
crate-type = ["lib", "cdylib", "staticlib"]

[build-dependencies]
tauri-build = { version = "2.0.0-rc", features = [] }
swift-rs = { version = "1.0.6", features = ["build"] }

[dependencies]
tauri = { workspace = true, features = [
	"macos-private-api",
	"protocol-asset",
	"tray-icon",
	"image-png",
] }
tauri-plugin-shell = "2.0.0-rc"
tauri-nspanel = { git = "https://github.com/ahkohd/tauri-nspanel", branch = "v2" }
tauri-plugin-store = "2.0.0-rc.0"
tauri-plugin-os = "2.0.0-rc.0"
tauri-plugin-process = "2.0.0-rc.0"
tauri-plugin-decorum = "1.0.0"
tauri-plugin-dialog = "2.0.0-rc.0"
tauri-plugin-updater = "2.0.0-rc.0"
tauri-plugin-oauth = { git = "https://github.com/FabianLars/tauri-plugin-oauth", branch = "v2" }
tauri-specta = { version = "=2.0.0-rc.14", features = ["derive", "typescript"] }

serde = { version = "1", features = ["derive"] }
serde_json = "1"
specta = "=2.0.0-rc.19"
specta-typescript = "0.0.6"
swift-rs = "1.0.6"
nix = { version = "0.29.0", features = ["fs"] }
tokio = { version = "1.39.2", features = ["macros", "process", "fs"] }
uuid = { version = "1.10.0", features = ["v4"] }
scap = { git = "https://github.com/CapSoftware/scap", rev = "691bd88798d3" }
ffmpeg-sidecar = { git = "https://github.com/CapSoftware/ffmpeg-sidecar", branch = "main" }
wgpu = "22.1.0"
bytemuck = { version = "1.7", features = ["derive"] }
image = "0.25.2"
tauri-plugin-fs = "2.0.0-rc.0"
futures-intrusive = "0.5.0"
anyhow = "1.0.86"
mp4 = "0.14.0"
futures = "0.3.30"
nokhwa = { git = "https://github.com/Brendonovich/nokhwa", rev = "2de5a760d5f1", features = [
	"input-avfoundation",
	"serialize",
] }
axum = { version = "0.7.5", features = ["ws"] }
tracing = "0.1.40"
cpal = "0.15.3"
indexmap = "2.5.0"
num-traits = "0.2.19"
tempfile = "3.12.0"
ffmpeg-next.workspace = true
chrono = "0.4.38"
rodio = "0.19.0"

cap-utils = { path = "../../../crates/utils" }
cap-project = { path = "../../../crates/project" }
cap-rendering = { path = "../../../crates/rendering" }
cap-ffmpeg = { path = "../../../crates/ffmpeg" }
reqwest = { version = "0.12.7", features = ["json", "stream", "multipart"] }
dotenvy_macro = "0.15.7"

[target.'cfg(target_os = "macos")'.dependencies]
core-graphics = "0.24.0"
core-foundation = "0.10.0"
nokhwa-bindings-macos = { git = "https://github.com/Brendonovich/nokhwa", rev = "2de5a760d5f1" }
objc2-app-kit = { version = "0.2.2", features = ["NSWindow", "NSResponder"] }
cocoa = "0.26.0"
objc = "0.2.7"

# Optimize for smaller binary size
[profile.release]
panic = "abort"   # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true        # Enables link to optimizations
opt-level = "s"   # Optimize for binary size
strip = true      # Remove debug symbols
